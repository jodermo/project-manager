{
  "name": "project-manager",
  "version": "0.0.1",
  "author": "Moritz Petzka",
  "homepage": "https://petzka.com",
  "scripts": {
    "ng": "ng",
    "start": "npm run serve",
    "build": "npm run ng:build && exit",
    "watch": "npm-run-all --parallel ng:watch:admin ng:watch:frontend",
    "test": "ng test",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "e2e": "ng e2e",
    "restart": "npm run docker:restart",
    "build:docker": "npm run ng:build:docker && exit",
    "serve": "npm-run-all --parallel ng:serve ionic:serve json:server",
    "serve:network": "npm-run-all --parallel ng:serve:network ionic:serve:network json:server:network",
    "prebuild": "rimraf dist",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "postinstall": "npm run ionic:app:install && npm run ionic:admin:install && exit",
    "docker:install": "npm run build:docker && npm run docker:build && exit",
    "docker:start": "npm run docker:up",
    "docker:restart": "npm run build:docker && npm run docker:up && exit",
    "terminal": "open-terminal \"echo 'Hello, world!'\" --unhandled-rejections=strict",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "ng:serve": "npm-run-all --parallel ng:serve:admin ng:serve:frontend",
    "ng:build": "npm run ng:build:admin && npm run ng:build:frontend && exit",
    "ng:serve:network": "npm-run-all --parallel ng:serve:network:admin ng:serve:network:frontend",
    "ng:build:docker": "npm run ng:build:docker:admin && npm run ng:build:docker:frontend && exit",
    "ng:serve:admin": "cd administration && npm run start --configuration=development && exit",
    "ng:serve:frontend": "cd frontend && npm run start --configuration=development && exit",
    "ng:serve:network:admin": "cd administration && npm run start --host=0.0.0.0 --configuration=development && exit",
    "ng:serve:network:frontend": "cd frontend && npm run start --host=0.0.0.0 --configuration=development  && exit",
    "ng:build:admin": "cd administration && npm run build administration --configuration=production && exit",
    "ng:build:frontend": "cd frontend && npm run build frontend --configuration=production && exit",
    "ng:build:docker:admin": "cd administration && npm run build docker-administration --configuration=docker && exit",
    "ng:build:docker:frontend": "cd frontend && npm run build docker-frontend --configuration=docker && exit",
    "ng:watch:admin": "cd administration && npm run watch && exit",
    "ng:watch:frontend": "cd frontend && npm run watch && exit",
    "ionic:app:install": "cd mobile-app && npm install",
    "ionic:app:run:android": "cd mobile-app && ionic cordova run android --device --verbose",
    "ionic:app:emulate:android": "cd mobile-app && ionic cordova emulate android --target=Pixel_4_API_31 --verbose",
    "ionic:app:serve": "cd mobile-app && ionic serve --configuration=development --port=4400 --disable-host-check && exit",
    "ionic:app:serve:network": "cd mobile-app && ionic serve --configuration=development --host=0.0.0.0 --port=4400 --disable-host-check && exit",
    "ionic:admin:install": "cd mobile-administration && npm install",
    "ionic:admin:run:android": "cd mobile-administration && ionic cordova run android --device --verbose",
    "ionic:admin:emulate:android": "cd mobile-administration && ionic cordova emulate android --target=Pixel_4_API_31 --verbose",
    "ionic:admin:serve": "cd mobile-administration && ionic serve --configuration=development --port=4500 --disable-host-check && exit",
    "ionic:admin:serve:network": "cd mobile-administration && ionic serve --configuration=development --host=0.0.0.0 --port=4500 --disable-host-check && exit",
    "docker:down": "docker-compose down -v",
    "docker:build": "npm run build  && docker-compose build",
    "docker:up": "docker-compose build && docker-compose up",
    "merge": "package-json-merge administration/package.json frontend/package.json mobile-app/package.json package.json > new-package.json && npm run merge:self",
    "merge:self": "package-json-merge new-package.json > package.json",
    "json:server": "json-server --watch json-server/data.json --port 8282",
    "json:server:network": "json-server --watch json-server/data.json --host=0.0.0.0 --port 8282"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "~14.2.7",
    "@angular/cdk": "^14.2.5",
    "@angular/common": "~14.2.7",
    "@angular/compiler": "~14.2.7",
    "@angular/core": "~14.2.7",
    "@angular/forms": "~14.2.7",
    "@angular/material": "^14.2.5",
    "@angular/platform-browser": "~14.2.7",
    "@angular/platform-browser-dynamic": "~14.2.7",
    "@angular/router": "~14.2.7",
    "@ar-js-org/ar.js": "^3.4.0",
    "@grapecity/activereports-angular": "^3.2.0",
    "@mediapipe/pose": "^0.5.1635988162",
    "@nestjs/swagger": "^6.2.1",
    "@tensorflow-models/pose-detection": "^2.0.0",
    "@tensorflow/tfjs-backend-webgl": "^4.0.0",
    "@tensorflow/tfjs-converter": "^4.0.0",
    "@tensorflow/tfjs-core": "^4.0.0",
    "@types/aframe": "^1.2.0",
    "@types/d3": "^7.4.0",
    "@types/dat.gui": "^0.7.7",
    "@types/gyronorm": "^2.0.1",
    "@types/hammerjs": "^2.0.41",
    "@types/long": "^4.0.2",
    "@types/three": "^0.144.0",
    "aframe": "^1.3.0",
    "aws-sdk": "^2.1238.0",
    "cordova-res": "^0.15.4",
    "d3": "^7.6.1",
    "dat.gui": "^0.7.9",
    "geotiff": "^2.0.5",
    "gyronorm": "^2.0.6",
    "hammerjs": "^2.0.8",
    "long": "^5.2.0",
    "ngx-dropzone": "^3.1.0",
    "ol": "^7.2.2",
    "package-json-merge": "0.0.1",
    "pbf": "^3.2.1",
    "rxjs": "~7.5.7",
    "scatter-gl": "0.0.13",
    "stats.js": "^0.17.0",
    "three": "^0.145.0",
    "tslib": "^2.4.0",
    "uuidv4": "^6.2.13",
    "xml-utils": "^1.3.0",
    "zone.js": "~0.11.8"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~14.2.6",
    "@angular-eslint/builder": "~14.1.2",
    "@angular-eslint/eslint-plugin": "~14.1.2",
    "@angular-eslint/eslint-plugin-template": "~14.1.2",
    "@angular-eslint/template-parser": "~14.1.2",
    "@angular/cli": "~14.2.6",
    "@angular/compiler": "~14.2.7",
    "@angular/compiler-cli": "~14.2.7",
    "@angular/language-service": "~14.2.7",
    "@capacitor/cli": "4.4.0",
    "@ionic/angular-toolkit": "^7.0.0",
    "@types/jasmine": "~4.3.0",
    "@types/jasminewd2": "~2.0.10",
    "@types/node": "^18.11.3",
    "@types/stats.js": "^0.17.0",
    "@typescript-eslint/eslint-plugin": "5.40.1",
    "@typescript-eslint/parser": "5.40.1",
    "dotenv": "^16.0.3",
    "dotenv-run-script": "^0.2.0",
    "eslint": "^8.26.0",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-jsdoc": "39.3.22",
    "eslint-plugin-prefer-arrow": "1.2.3",
    "jasmine-core": "~4.4.0",
    "jasmine-spec-reporter": "~7.0.0",
    "karma": "~6.4.1",
    "karma-chrome-launcher": "~3.1.1",
    "karma-coverage": "~2.2.0",
    "karma-coverage-istanbul-reporter": "~3.0.3",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "^2.0.0",
    "protractor": "~7.0.0",
    "ts-node": "~10.9.1",
    "typescript": "^4.9.5"
  },
  "description": "",
  "license": "UNLICENSED",
  "jest": {
    "moduleFileExtensions": {
      "0": "js",
      "1": "json",
      "2": "ts"
    },
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": {
      "0": "**/*.(t|j)s"
    },
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "browser": {
    "fs": false,
    "http": false,
    "https": false,
    "crypto": false,
    "stream": false
  }
}
